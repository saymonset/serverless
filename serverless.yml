service: national-vaccine-control-app
useDotenv: true
frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9
  environment:
    DYNAMODB_TABLE: ${self:service}-${sls:stage}
    MONGO_URI: mongodb+srv://simon:XhlUSILsriC0H3bO@micluster.mayzd.mongodb.net/
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
package:
  individually: true
  patterns:
    - "!*/**"
plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    usePipenv: false
    dockerizePip: true
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
      - qa
    start:
      port: 8000
      inMemory: true
      migrate: true

functions:
  create:
    handler: todos/create.create
    events:
      - httpApi:
          path: /todos
          method: post
  add-users:
    handler: addUser/handler.addUser
    package:
      patterns:
        - "addUser/handler.py"
    events:
      - http:
          path: user
          method: POST
          request:
            schemas:
              application/json: ${file(schemas/user-schema.json)}

  list:
    handler: todos/list.list
    events:
      - httpApi:
          path: /todos
          method: get

  get:
    handler: todos/get.get
    events:
      - httpApi:
          path: /todos/{id}
          method: get

  update:
    handler: todos/update.update
    events:
      - httpApi:
          path: /todos/{id}
          method: put

  delete:
    handler: todos/delete.delete
    events:
      - httpApi:
          path: /todos/{id}
          method: delete

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    vaccine:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: vaccine-${env:STAGE}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    person:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: person-${env:STAGE}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

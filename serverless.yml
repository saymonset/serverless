service: national-vaccine-control-app
useDotenv: true
frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9
  environment:
    DYNAMODB_TABLE: ${self:service}-${sls:stage}
    MONGO_URI: mongodb+srv://simon:XhlUSILsriC0H3bO@micluster.mayzd.mongodb.net/
    TWILIO_ID: 'ACe7edfd31cf39b1e25f717ed5093a81fc'
    TWILIO_AUTH_TOKEN: '05d07f01d95098080162dbbf0dddca38'
    JWT_SECRET: 'ASDASDJAWJDAIEJEIADJWDADKWOAJ'
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
package:
  individually: true
  patterns:
    - "!*/**"
plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    usePipenv: false
    dockerizePip: true
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
      - qa
    start:
      port: 8000
      inMemory: true
      migrate: true

functions:
  # TOKEN
  verify-token:
    handler: Token/handler.verifyToken
    package:
      patterns:
        - "Token/handler.py"
# PHONE
  send-sms:
    handler: Phone/sendSms/handler.sendSms
    package:
      patterns:
        - "Phone/sendSms/handler.py"
    events:
      - http:
          path: sendsms
          method: POST
          request:
            schemas:
              application/json: ${file(Phone/sendSms/phone-schema.json)}
  check-code:
    handler: Phone/checkCode/handler.checkCode
    package:
      patterns:
        - "Phone/checkCode/handler.py"
    events:
      - http:
          path: checkcode
          method: POST
          request:
            schemas:
              application/json: ${file(Phone/checkCode/code-schema.json)}
    # USERS
  add-users:
    handler: Users/addUser/handler.addUser
    package:
      patterns:
        - "Users/addUser/handler.py"
    events:
      - http:
          path: user
          method: POST
          cors: true
          authorizer:
            name: verify-token
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 0
          request:
            schemas:
              application/json: ${file(Users/user-schema.json)}

